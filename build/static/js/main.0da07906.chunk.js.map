{"version":3,"sources":["features/userSlice.js","Components/Blogs.js","Components/Homepage.js","Components/Navbar.js","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","isSignedIn","userData","searchInput","blogData","reducers","setSignedIn","state","action","payload","setUserData","setInput","setBlogData","actions","selectSignedIn","user","selectUserData","selectUserInput","Blogs","useSelector","blog_url","dispatch","useDispatch","useState","blogs","setBlogs","loading","setLoading","useEffect","axios","get","then","response","data","catch","error","console","log","className","articles","map","blog","target","href","url","src","image","source","publishedAt","title","description","totalArticles","Homepage","login","profileObj","style","display","clientId","render","renderProps","onClick","disabled","onSuccess","onFailure","cookiePolicy","Navbar","inputValue","setInputValue","placeholder","value","onChange","e","preventDefault","Avatar","imageUrl","alt","givenName","onLogoutSuccess","App","configureStore","reducer","userReducer","ReactDom","store","document","getElementById"],"mappings":"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","file":"static/js/main.0da07906.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    isSignedIn: false,\n    userData: null,\n    searchInput: \"anime\",\n    blogData: null,\n  },\n  reducers: {\n    setSignedIn: (state, action) => {\n      state.isSignedIn = action.payload;\n    },\n    setUserData: (state, action) => {\n      state.userData = action.payload;\n    },\n    setInput: (state, action) => {\n      state.searchInput = action.payload;\n    },\n    setBlogData: (state, action) => {\n      state.blogData = action.payload;\n    },\n  },\n});\n\nexport const {\n  setSignedIn,\n  setUserData,\n  setInput,\n  setBlogData,\n} = userSlice.actions;\n\nexport const selectSignedIn = (state) => state.user.isSignedIn;\nexport const selectUserData = (state) => state.user.userData;\nexport const selectUserInput = (state) => state.user.searchInput;\nexport const selectBlogData = (state) => state.user.blogData;\n\nexport default userSlice.reducer;","import React, { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserInput, setBlogData } from \"../features/userSlice\";\n\nimport \"../styling/blogs.css\";\n\nconst Blogs = () => {\n  const searchInput = useSelector(selectUserInput);\n  const blog_url = `https://gnews.io/api/v4/search?q=${searchInput}&token=689a5f474c2664a0d3709f8803722772`;\n  const dispatch = useDispatch();\n  const [blogs, setBlogs] = useState();\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(blog_url)\n      .then((response) => {\n        dispatch(setBlogData(response.data));\n        setBlogs(response.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [searchInput]);\n\n  return (\n    <div className=\"blog__page\">\n      <h1 className=\"blog__page__header\">Blogs</h1>\n      {loading ? <h1 className=\"loading\">Loading...</h1> : \"\"}\n      <div className=\"blogs\">\n        {blogs?.articles?.map((blog) => (\n          <a className=\"blog\" target=\"_blank\" href={blog.url}>\n            <img src={blog.image} />\n            <div>\n              <h3 className=\"sourceName\">\n                <span>{blog.source.name}</span>\n                <p>{blog.publishedAt}</p>\n              </h3>\n              <h1>{blog.title}</h1>\n              <p>{blog.description}</p>\n            </div>\n          </a>\n        ))}\n\n        {blogs?.totalArticles == 0 && (\n          <h1 className=\"no__blogs\">\n            No blogs available ðŸ˜ž. Search something else to read blogs on the\n            greatest platform.\n          </h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Blogs;","import React from \"react\"\nimport GoogleLogin from \"react-google-login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectSignedIn,\n  setSignedIn,\n  setUserData,\n} from \"../features/userSlice\";\n\nimport \"../styling/home.css\";\n\nconst Homepage = () => {\n    const isSignedIn = useSelector(selectSignedIn);\n\n  const dispatch = useDispatch();\n  const login = (response) => {\n    console.log(response);\n    dispatch(setSignedIn(true));\n    dispatch(setUserData(response.profileObj));\n  };\n\n  return (\n    <div className=\"home__page\" style={{ display: isSignedIn ? \"none\" : \"\" }}>\n      {!isSignedIn ? (\n        <div className=\"login__message\">\n          \n          <h3>Amazing blogs just one search away. </h3>\n          \n          <GoogleLogin\n            clientId=\"255368387867-89v0vs3vh1rf2c8bjo5vuoh1ihrdk9so.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <button\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                className=\"login__button\"\n              >\n                Login with Google\n              </button>\n            )}\n            onSuccess={login}\n            onFailure={login}\n            isSignedIn={true}\n            cookiePolicy={\"single_host_origin\"}\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Homepage;\n","import { Avatar } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectSignedIn,\n  selectUserData,\n  setInput,\n  setSignedIn,\n  setUserData,\n} from \"../features/userSlice\";\nimport UserPage from './User'\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nimport \"../styling/navbar.css\";\n\nconst Navbar = () => {\n  const [inputValue, setInputValue] = useState(\"Anime\");\n  const isSignedIn = useSelector(selectSignedIn);\n  const userData = useSelector(selectUserData);\n\n  const dispatch = useDispatch();\n\n  const logout = (response) => {\n    dispatch(setSignedIn(false));\n    dispatch(setUserData(null));\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    dispatch(setInput(inputValue));\n  };\n\n  return (\n    <div className=\"navbar\">\n      <h1 className=\"navbar__header\">Blogs </h1>\n      {isSignedIn && (\n        <div className=\"blog__search\">\n          <input\n            className=\"search\"\n            placeholder=\"Search for a blog\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n          />\n          <button className=\"submit\" onClick={handleClick}>\n            Search\n          </button>\n        </div>\n      )}\n\n      {isSignedIn ? (\n        <div className=\"navbar__user__data\">\n          <Avatar\n            className=\"user\"\n            src={userData?.imageUrl}\n            alt={userData?.name}\n          />\n          <h1 className=\"signedIn\" >{userData?.givenName}</h1>\n          <GoogleLogout\n            clientId=\"255368387867-89v0vs3vh1rf2c8bjo5vuoh1ihrdk9so.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <button\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                className=\"logout__button\"\n              >\n                Logout \n              </button>\n            )}\n            onLogoutSuccess={logout}\n          />\n        </div>\n      ) : (\n        <h1 className=\"notSignedIn\"> </h1>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;","\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Blogs from \"./Components/Blogs\"\nimport Homepage from \"./Components/Homepage\";\nimport Navbar from \"./Components/Navbar\";\nimport { selectSignedIn } from \"./features/userSlice\";\nimport \"./styling/app.css\";\n\nconst App = () => {\n  const isSignedIn = useSelector(selectSignedIn);\n\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Homepage />\n      {isSignedIn && <Blogs />}\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/userSlice\";\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});","import React from 'react';\n\nimport ReactDom from 'react-dom';\nimport App from './App'\n\n\nimport {Provider } from 'react-redux';\nimport store from \"./app/store\";\n\n//wrapping provder with store to app component so all props are aviable globally \nReactDom.render(\n    <Provider store={store}>  \n        <App />\n    </Provider>,\n    document.getElementById(\"root\"))"],"sourceRoot":""}